# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Maven and Docker CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  IMAGE_NAME: cs_funding:$(date +%s)

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME
    - name: Log into registry
      run: echo "${{ secrets.ACCESS_TOKEN }}" | docker login -u dazhi0619 --password-stdin
    - name: Push image
      run: |
        # 拼接镜像 id，这个镜像 id 就是在使用 docker 镜像时 pull 后面的名字。
        IMAGE_ID=dazhi0619/$IMAGE_NAME
        # 将所有的大写字母转为小写
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # 从 GitHub.ref 中取出版本
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # 从 tag 名字中替换 v 字符
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        # 设置镜像 id 和版本号
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        # 进行 push
        docker push $IMAGE_ID:$VERSION
      
